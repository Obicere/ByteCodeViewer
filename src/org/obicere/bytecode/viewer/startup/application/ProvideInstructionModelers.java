package org.obicere.bytecode.viewer.startup.application;

import org.obicere.bytecode.core.objects.code.instruction.UnknownInstruction;
import org.obicere.bytecode.core.objects.code.instruction.aaload;
import org.obicere.bytecode.core.objects.code.instruction.aastore;
import org.obicere.bytecode.core.objects.code.instruction.aconst_null;
import org.obicere.bytecode.core.objects.code.instruction.aload;
import org.obicere.bytecode.core.objects.code.instruction.aload_0;
import org.obicere.bytecode.core.objects.code.instruction.aload_1;
import org.obicere.bytecode.core.objects.code.instruction.aload_2;
import org.obicere.bytecode.core.objects.code.instruction.aload_3;
import org.obicere.bytecode.core.objects.code.instruction.anewarray;
import org.obicere.bytecode.core.objects.code.instruction.areturn;
import org.obicere.bytecode.core.objects.code.instruction.arraylength;
import org.obicere.bytecode.core.objects.code.instruction.astore;
import org.obicere.bytecode.core.objects.code.instruction.astore_0;
import org.obicere.bytecode.core.objects.code.instruction.astore_1;
import org.obicere.bytecode.core.objects.code.instruction.astore_2;
import org.obicere.bytecode.core.objects.code.instruction.astore_3;
import org.obicere.bytecode.core.objects.code.instruction.athrow;
import org.obicere.bytecode.core.objects.code.instruction.baload;
import org.obicere.bytecode.core.objects.code.instruction.bastore;
import org.obicere.bytecode.core.objects.code.instruction.bipush;
import org.obicere.bytecode.core.objects.code.instruction.caload;
import org.obicere.bytecode.core.objects.code.instruction.castore;
import org.obicere.bytecode.core.objects.code.instruction.checkcast;
import org.obicere.bytecode.core.objects.code.instruction.d2f;
import org.obicere.bytecode.core.objects.code.instruction.d2i;
import org.obicere.bytecode.core.objects.code.instruction.d2l;
import org.obicere.bytecode.core.objects.code.instruction.dadd;
import org.obicere.bytecode.core.objects.code.instruction.daload;
import org.obicere.bytecode.core.objects.code.instruction.dastore;
import org.obicere.bytecode.core.objects.code.instruction.dcmpg;
import org.obicere.bytecode.core.objects.code.instruction.dcmpl;
import org.obicere.bytecode.core.objects.code.instruction.dconst_0;
import org.obicere.bytecode.core.objects.code.instruction.dconst_1;
import org.obicere.bytecode.core.objects.code.instruction.ddiv;
import org.obicere.bytecode.core.objects.code.instruction.dload;
import org.obicere.bytecode.core.objects.code.instruction.dload_0;
import org.obicere.bytecode.core.objects.code.instruction.dload_1;
import org.obicere.bytecode.core.objects.code.instruction.dload_2;
import org.obicere.bytecode.core.objects.code.instruction.dload_3;
import org.obicere.bytecode.core.objects.code.instruction.dmul;
import org.obicere.bytecode.core.objects.code.instruction.dneg;
import org.obicere.bytecode.core.objects.code.instruction.drem;
import org.obicere.bytecode.core.objects.code.instruction.dreturn;
import org.obicere.bytecode.core.objects.code.instruction.dstore;
import org.obicere.bytecode.core.objects.code.instruction.dstore_0;
import org.obicere.bytecode.core.objects.code.instruction.dstore_1;
import org.obicere.bytecode.core.objects.code.instruction.dstore_2;
import org.obicere.bytecode.core.objects.code.instruction.dstore_3;
import org.obicere.bytecode.core.objects.code.instruction.dsub;
import org.obicere.bytecode.core.objects.code.instruction.dup;
import org.obicere.bytecode.core.objects.code.instruction.dup2;
import org.obicere.bytecode.core.objects.code.instruction.dup2_x1;
import org.obicere.bytecode.core.objects.code.instruction.dup2_x2;
import org.obicere.bytecode.core.objects.code.instruction.dup_x1;
import org.obicere.bytecode.core.objects.code.instruction.dup_x2;
import org.obicere.bytecode.core.objects.code.instruction.f2d;
import org.obicere.bytecode.core.objects.code.instruction.f2i;
import org.obicere.bytecode.core.objects.code.instruction.f2l;
import org.obicere.bytecode.core.objects.code.instruction.fadd;
import org.obicere.bytecode.core.objects.code.instruction.faload;
import org.obicere.bytecode.core.objects.code.instruction.fastore;
import org.obicere.bytecode.core.objects.code.instruction.fcmpg;
import org.obicere.bytecode.core.objects.code.instruction.fcmpl;
import org.obicere.bytecode.core.objects.code.instruction.fconst_0;
import org.obicere.bytecode.core.objects.code.instruction.fconst_1;
import org.obicere.bytecode.core.objects.code.instruction.fconst_2;
import org.obicere.bytecode.core.objects.code.instruction.fdiv;
import org.obicere.bytecode.core.objects.code.instruction.fload;
import org.obicere.bytecode.core.objects.code.instruction.fload_0;
import org.obicere.bytecode.core.objects.code.instruction.fload_1;
import org.obicere.bytecode.core.objects.code.instruction.fload_2;
import org.obicere.bytecode.core.objects.code.instruction.fload_3;
import org.obicere.bytecode.core.objects.code.instruction.fmul;
import org.obicere.bytecode.core.objects.code.instruction.fneg;
import org.obicere.bytecode.core.objects.code.instruction.frem;
import org.obicere.bytecode.core.objects.code.instruction.freturn;
import org.obicere.bytecode.core.objects.code.instruction.fstore;
import org.obicere.bytecode.core.objects.code.instruction.fstore_0;
import org.obicere.bytecode.core.objects.code.instruction.fstore_1;
import org.obicere.bytecode.core.objects.code.instruction.fstore_2;
import org.obicere.bytecode.core.objects.code.instruction.fstore_3;
import org.obicere.bytecode.core.objects.code.instruction.fsub;
import org.obicere.bytecode.core.objects.code.instruction.getfield;
import org.obicere.bytecode.core.objects.code.instruction.getstatic;
import org.obicere.bytecode.core.objects.code.instruction.goto_;
import org.obicere.bytecode.core.objects.code.instruction.goto_w;
import org.obicere.bytecode.core.objects.code.instruction.i2b;
import org.obicere.bytecode.core.objects.code.instruction.i2c;
import org.obicere.bytecode.core.objects.code.instruction.i2d;
import org.obicere.bytecode.core.objects.code.instruction.i2f;
import org.obicere.bytecode.core.objects.code.instruction.i2l;
import org.obicere.bytecode.core.objects.code.instruction.i2s;
import org.obicere.bytecode.core.objects.code.instruction.iadd;
import org.obicere.bytecode.core.objects.code.instruction.iaload;
import org.obicere.bytecode.core.objects.code.instruction.iand;
import org.obicere.bytecode.core.objects.code.instruction.iastore;
import org.obicere.bytecode.core.objects.code.instruction.iconst_0;
import org.obicere.bytecode.core.objects.code.instruction.iconst_1;
import org.obicere.bytecode.core.objects.code.instruction.iconst_2;
import org.obicere.bytecode.core.objects.code.instruction.iconst_3;
import org.obicere.bytecode.core.objects.code.instruction.iconst_4;
import org.obicere.bytecode.core.objects.code.instruction.iconst_5;
import org.obicere.bytecode.core.objects.code.instruction.iconst_m1;
import org.obicere.bytecode.core.objects.code.instruction.idiv;
import org.obicere.bytecode.core.objects.code.instruction.if_acmpeq;
import org.obicere.bytecode.core.objects.code.instruction.if_acmpne;
import org.obicere.bytecode.core.objects.code.instruction.if_icmpeq;
import org.obicere.bytecode.core.objects.code.instruction.if_icmpge;
import org.obicere.bytecode.core.objects.code.instruction.if_icmpgt;
import org.obicere.bytecode.core.objects.code.instruction.if_icmple;
import org.obicere.bytecode.core.objects.code.instruction.if_icmplt;
import org.obicere.bytecode.core.objects.code.instruction.if_icmpne;
import org.obicere.bytecode.core.objects.code.instruction.ifeq;
import org.obicere.bytecode.core.objects.code.instruction.ifge;
import org.obicere.bytecode.core.objects.code.instruction.ifgt;
import org.obicere.bytecode.core.objects.code.instruction.ifle;
import org.obicere.bytecode.core.objects.code.instruction.iflt;
import org.obicere.bytecode.core.objects.code.instruction.ifne;
import org.obicere.bytecode.core.objects.code.instruction.ifnonnull;
import org.obicere.bytecode.core.objects.code.instruction.ifnull;
import org.obicere.bytecode.core.objects.code.instruction.iinc;
import org.obicere.bytecode.core.objects.code.instruction.iload;
import org.obicere.bytecode.core.objects.code.instruction.iload_0;
import org.obicere.bytecode.core.objects.code.instruction.iload_1;
import org.obicere.bytecode.core.objects.code.instruction.iload_2;
import org.obicere.bytecode.core.objects.code.instruction.iload_3;
import org.obicere.bytecode.core.objects.code.instruction.imul;
import org.obicere.bytecode.core.objects.code.instruction.ineg;
import org.obicere.bytecode.core.objects.code.instruction.instanceof_;
import org.obicere.bytecode.core.objects.code.instruction.invokedynamic;
import org.obicere.bytecode.core.objects.code.instruction.invokeinterface;
import org.obicere.bytecode.core.objects.code.instruction.invokespecial;
import org.obicere.bytecode.core.objects.code.instruction.invokestatic;
import org.obicere.bytecode.core.objects.code.instruction.invokevirtual;
import org.obicere.bytecode.core.objects.code.instruction.ior;
import org.obicere.bytecode.core.objects.code.instruction.irem;
import org.obicere.bytecode.core.objects.code.instruction.ireturn;
import org.obicere.bytecode.core.objects.code.instruction.ishl;
import org.obicere.bytecode.core.objects.code.instruction.ishr;
import org.obicere.bytecode.core.objects.code.instruction.istore;
import org.obicere.bytecode.core.objects.code.instruction.istore_0;
import org.obicere.bytecode.core.objects.code.instruction.istore_1;
import org.obicere.bytecode.core.objects.code.instruction.istore_2;
import org.obicere.bytecode.core.objects.code.instruction.istore_3;
import org.obicere.bytecode.core.objects.code.instruction.isub;
import org.obicere.bytecode.core.objects.code.instruction.iushr;
import org.obicere.bytecode.core.objects.code.instruction.ixor;
import org.obicere.bytecode.core.objects.code.instruction.jsr;
import org.obicere.bytecode.core.objects.code.instruction.jsr_w;
import org.obicere.bytecode.core.objects.code.instruction.l2d;
import org.obicere.bytecode.core.objects.code.instruction.l2f;
import org.obicere.bytecode.core.objects.code.instruction.l2i;
import org.obicere.bytecode.core.objects.code.instruction.ladd;
import org.obicere.bytecode.core.objects.code.instruction.laload;
import org.obicere.bytecode.core.objects.code.instruction.land;
import org.obicere.bytecode.core.objects.code.instruction.lastore;
import org.obicere.bytecode.core.objects.code.instruction.lcmp;
import org.obicere.bytecode.core.objects.code.instruction.lconst_0;
import org.obicere.bytecode.core.objects.code.instruction.lconst_1;
import org.obicere.bytecode.core.objects.code.instruction.ldc;
import org.obicere.bytecode.core.objects.code.instruction.ldc2_w;
import org.obicere.bytecode.core.objects.code.instruction.ldc_w;
import org.obicere.bytecode.core.objects.code.instruction.ldiv;
import org.obicere.bytecode.core.objects.code.instruction.lload;
import org.obicere.bytecode.core.objects.code.instruction.lload_0;
import org.obicere.bytecode.core.objects.code.instruction.lload_1;
import org.obicere.bytecode.core.objects.code.instruction.lload_2;
import org.obicere.bytecode.core.objects.code.instruction.lload_3;
import org.obicere.bytecode.core.objects.code.instruction.lmul;
import org.obicere.bytecode.core.objects.code.instruction.lneg;
import org.obicere.bytecode.core.objects.code.instruction.lookupswitch;
import org.obicere.bytecode.core.objects.code.instruction.lor;
import org.obicere.bytecode.core.objects.code.instruction.lrem;
import org.obicere.bytecode.core.objects.code.instruction.lreturn;
import org.obicere.bytecode.core.objects.code.instruction.lshl;
import org.obicere.bytecode.core.objects.code.instruction.lshr;
import org.obicere.bytecode.core.objects.code.instruction.lstore;
import org.obicere.bytecode.core.objects.code.instruction.lstore_0;
import org.obicere.bytecode.core.objects.code.instruction.lstore_1;
import org.obicere.bytecode.core.objects.code.instruction.lstore_2;
import org.obicere.bytecode.core.objects.code.instruction.lstore_3;
import org.obicere.bytecode.core.objects.code.instruction.lsub;
import org.obicere.bytecode.core.objects.code.instruction.lushr;
import org.obicere.bytecode.core.objects.code.instruction.lxor;
import org.obicere.bytecode.core.objects.code.instruction.monitorenter;
import org.obicere.bytecode.core.objects.code.instruction.monitorexit;
import org.obicere.bytecode.core.objects.code.instruction.multianewarray;
import org.obicere.bytecode.core.objects.code.instruction.new_;
import org.obicere.bytecode.core.objects.code.instruction.newarray;
import org.obicere.bytecode.core.objects.code.instruction.nop;
import org.obicere.bytecode.core.objects.code.instruction.pop;
import org.obicere.bytecode.core.objects.code.instruction.pop2;
import org.obicere.bytecode.core.objects.code.instruction.putfield;
import org.obicere.bytecode.core.objects.code.instruction.putstatic;
import org.obicere.bytecode.core.objects.code.instruction.ret;
import org.obicere.bytecode.core.objects.code.instruction.return_;
import org.obicere.bytecode.core.objects.code.instruction.saload;
import org.obicere.bytecode.core.objects.code.instruction.sastore;
import org.obicere.bytecode.core.objects.code.instruction.sipush;
import org.obicere.bytecode.core.objects.code.instruction.swap;
import org.obicere.bytecode.core.objects.code.instruction.tableswitch;
import org.obicere.bytecode.core.objects.code.instruction.wide;
import org.obicere.bytecode.viewer.context.Domain;
import org.obicere.bytecode.viewer.modeler.ModelerSet;
import org.obicere.bytecode.viewer.modeler.instruction.EmptyInstructionModeler;
import org.obicere.bytecode.viewer.modeler.instruction.UnknownInstructionModeler;
import org.obicere.bytecode.viewer.modeler.instruction.aloadModeler;
import org.obicere.bytecode.viewer.modeler.instruction.anewarrayModeler;
import org.obicere.bytecode.viewer.modeler.instruction.astoreModeler;
import org.obicere.bytecode.viewer.modeler.instruction.bipushModeler;
import org.obicere.bytecode.viewer.modeler.instruction.checkcastModeler;
import org.obicere.bytecode.viewer.modeler.instruction.dloadModeler;
import org.obicere.bytecode.viewer.modeler.instruction.dstoreModeler;
import org.obicere.bytecode.viewer.modeler.instruction.floadModeler;
import org.obicere.bytecode.viewer.modeler.instruction.fstoreModeler;
import org.obicere.bytecode.viewer.modeler.instruction.getfieldModeler;
import org.obicere.bytecode.viewer.modeler.instruction.getstaticModeler;
import org.obicere.bytecode.viewer.modeler.instruction.gotoModeler;
import org.obicere.bytecode.viewer.modeler.instruction.goto_wModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_acmpeqModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_acmpneModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_icmpeqModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_icmpgeModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_icmpgtModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_icmpleModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_icmpltModeler;
import org.obicere.bytecode.viewer.modeler.instruction.if_icmpneModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifeqModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifgeModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifgtModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifleModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifltModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifneModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifnonnullModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ifnullModeler;
import org.obicere.bytecode.viewer.modeler.instruction.iincModeler;
import org.obicere.bytecode.viewer.modeler.instruction.iloadModeler;
import org.obicere.bytecode.viewer.modeler.instruction.instanceofModeler;
import org.obicere.bytecode.viewer.modeler.instruction.invokedynamicModeler;
import org.obicere.bytecode.viewer.modeler.instruction.invokeinterfaceModeler;
import org.obicere.bytecode.viewer.modeler.instruction.invokespecialModeler;
import org.obicere.bytecode.viewer.modeler.instruction.invokestaticModeler;
import org.obicere.bytecode.viewer.modeler.instruction.invokevirtualModeler;
import org.obicere.bytecode.viewer.modeler.instruction.istoreModeler;
import org.obicere.bytecode.viewer.modeler.instruction.jsrModeler;
import org.obicere.bytecode.viewer.modeler.instruction.jsr_wModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ldc2_wModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ldcModeler;
import org.obicere.bytecode.viewer.modeler.instruction.ldc_wModeler;
import org.obicere.bytecode.viewer.modeler.instruction.lloadModeler;
import org.obicere.bytecode.viewer.modeler.instruction.lookupswitchModeler;
import org.obicere.bytecode.viewer.modeler.instruction.lstoreModeler;
import org.obicere.bytecode.viewer.modeler.instruction.multianewarrayModeler;
import org.obicere.bytecode.viewer.modeler.instruction.newModeler;
import org.obicere.bytecode.viewer.modeler.instruction.newarrayModeler;
import org.obicere.bytecode.viewer.modeler.instruction.putfieldModeler;
import org.obicere.bytecode.viewer.modeler.instruction.putstaticModeler;
import org.obicere.bytecode.viewer.modeler.instruction.retModeler;
import org.obicere.bytecode.viewer.modeler.instruction.sipushModeler;
import org.obicere.bytecode.viewer.modeler.instruction.tableswitchModeler;
import org.obicere.bytecode.viewer.modeler.instruction.wideModeler;
import org.obicere.bytecode.viewer.startup.StartUpTask;

/**
 */
public class ProvideInstructionModelers implements StartUpTask {
    @Override
    public void call(final Domain domain) {
        final ModelerSet modelerSet = domain.getModelers();
        modelerSet.add(aaload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(aastore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(aconst_null.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(aload.IDENTIFIER, new aloadModeler());
        modelerSet.add(aload_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(aload_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(aload_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(aload_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(anewarray.IDENTIFIER, new anewarrayModeler());
        modelerSet.add(areturn.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(arraylength.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(astore.IDENTIFIER, new astoreModeler());
        modelerSet.add(astore_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(astore_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(astore_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(astore_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(athrow.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(baload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(bastore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(bipush.IDENTIFIER, new bipushModeler());
        modelerSet.add(caload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(castore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(checkcast.IDENTIFIER, new checkcastModeler());
        modelerSet.add(d2f.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(d2i.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(d2l.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dadd.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(daload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dastore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dcmpg.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dcmpl.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dconst_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dconst_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ddiv.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dload.IDENTIFIER, new dloadModeler());
        modelerSet.add(dload_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dload_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dload_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dload_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dmul.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dneg.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(drem.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dreturn.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dstore.IDENTIFIER, new dstoreModeler());
        modelerSet.add(dstore_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dstore_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dstore_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dstore_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dsub.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dup.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dup2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dup2_x1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dup2_x2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dup_x1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(dup_x2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(f2d.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(f2i.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(f2l.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fadd.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(faload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fastore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fcmpg.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fcmpl.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fconst_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fconst_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fconst_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fdiv.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fload.IDENTIFIER, new floadModeler());
        modelerSet.add(fload_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fload_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fload_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fload_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fmul.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fneg.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(frem.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(freturn.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fstore.IDENTIFIER, new fstoreModeler());
        modelerSet.add(fstore_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fstore_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fstore_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fstore_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(fsub.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(getfield.IDENTIFIER, new getfieldModeler());
        modelerSet.add(getstatic.IDENTIFIER, new getstaticModeler());
        modelerSet.add(goto_.IDENTIFIER, new gotoModeler());
        modelerSet.add(goto_w.IDENTIFIER, new goto_wModeler());
        modelerSet.add(i2b.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(i2c.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(i2d.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(i2f.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(i2l.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(i2s.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iadd.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iaload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iand.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iastore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iconst_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iconst_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iconst_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iconst_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iconst_4.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iconst_5.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iconst_m1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(idiv.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ifeq.IDENTIFIER, new ifeqModeler());
        modelerSet.add(ifge.IDENTIFIER, new ifgeModeler());
        modelerSet.add(ifgt.IDENTIFIER, new ifgtModeler());
        modelerSet.add(ifle.IDENTIFIER, new ifleModeler());
        modelerSet.add(iflt.IDENTIFIER, new ifltModeler());
        modelerSet.add(ifne.IDENTIFIER, new ifneModeler());
        modelerSet.add(ifnonnull.IDENTIFIER, new ifnonnullModeler());
        modelerSet.add(ifnull.IDENTIFIER, new ifnullModeler());
        modelerSet.add(if_acmpeq.IDENTIFIER, new if_acmpeqModeler());
        modelerSet.add(if_acmpne.IDENTIFIER, new if_acmpneModeler());
        modelerSet.add(if_icmpeq.IDENTIFIER, new if_icmpeqModeler());
        modelerSet.add(if_icmpge.IDENTIFIER, new if_icmpgeModeler());
        modelerSet.add(if_icmpgt.IDENTIFIER, new if_icmpgtModeler());
        modelerSet.add(if_icmple.IDENTIFIER, new if_icmpleModeler());
        modelerSet.add(if_icmplt.IDENTIFIER, new if_icmpltModeler());
        modelerSet.add(if_icmpne.IDENTIFIER, new if_icmpneModeler());
        modelerSet.add(iinc.IDENTIFIER, new iincModeler());
        modelerSet.add(iload.IDENTIFIER, new iloadModeler());
        modelerSet.add(iload_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iload_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iload_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iload_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(imul.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ineg.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(instanceof_.IDENTIFIER, new instanceofModeler());
        modelerSet.add(invokedynamic.IDENTIFIER, new invokedynamicModeler());
        modelerSet.add(invokeinterface.IDENTIFIER, new invokeinterfaceModeler());
        modelerSet.add(invokespecial.IDENTIFIER, new invokespecialModeler());
        modelerSet.add(invokestatic.IDENTIFIER, new invokestaticModeler());
        modelerSet.add(invokevirtual.IDENTIFIER, new invokevirtualModeler());
        modelerSet.add(ior.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(irem.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ireturn.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ishl.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ishr.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(istore.IDENTIFIER, new istoreModeler());
        modelerSet.add(istore_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(istore_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(istore_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(istore_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(isub.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(iushr.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ixor.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(jsr.IDENTIFIER, new jsrModeler());
        modelerSet.add(jsr_w.IDENTIFIER, new jsr_wModeler());
        modelerSet.add(l2d.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(l2f.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(l2i.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ladd.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(laload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(land.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lastore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lcmp.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lconst_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lconst_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(ldc.IDENTIFIER, new ldcModeler());
        modelerSet.add(ldc2_w.IDENTIFIER, new ldc2_wModeler());
        modelerSet.add(ldc_w.IDENTIFIER, new ldc_wModeler());
        modelerSet.add(ldiv.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lload.IDENTIFIER, new lloadModeler());
        modelerSet.add(lload_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lload_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lload_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lload_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lmul.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lneg.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lookupswitch.IDENTIFIER, new lookupswitchModeler());
        modelerSet.add(lor.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lrem.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lreturn.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lshl.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lshr.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lstore.IDENTIFIER, new lstoreModeler());
        modelerSet.add(lstore_0.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lstore_1.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lstore_2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lstore_3.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lsub.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lushr.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(lxor.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(monitorenter.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(monitorexit.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(multianewarray.IDENTIFIER, new multianewarrayModeler());
        modelerSet.add(newarray.IDENTIFIER, new newarrayModeler());
        modelerSet.add(new_.IDENTIFIER, new newModeler());
        modelerSet.add(nop.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(pop.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(pop2.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(putfield.IDENTIFIER, new putfieldModeler());
        modelerSet.add(putstatic.IDENTIFIER, new putstaticModeler());
        modelerSet.add(ret.IDENTIFIER, new retModeler());
        modelerSet.add(return_.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(saload.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(sastore.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(sipush.IDENTIFIER, new sipushModeler());
        modelerSet.add(swap.IDENTIFIER, EmptyInstructionModeler.getInstance());
        modelerSet.add(tableswitch.IDENTIFIER, new tableswitchModeler());
        modelerSet.add(wide.IDENTIFIER, new wideModeler());

        modelerSet.add(UnknownInstruction.IDENTIFIER, new UnknownInstructionModeler());
    }
}
