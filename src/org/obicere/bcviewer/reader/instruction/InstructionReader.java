package org.obicere.bcviewer.reader.instruction;

import org.obicere.bcviewer.bytecode.instruction.Instruction;
import org.obicere.bcviewer.bytecode.instruction.UnknownInstruction;
import org.obicere.bcviewer.util.IndexedDataInputStream;
import org.obicere.bcviewer.util.Reader;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

/**
 * @author Obicere
 */
public class InstructionReader implements Reader<Instruction> {

    private final HashMap<Integer, Reader<? extends Instruction>> readers = new HashMap<>();

    public static final int OPCODE_NOP             = 0x0;
    public static final int OPCODE_ACONST_NULL     = 0x1;
    public static final int OPCODE_ICONST_M1       = 0x2;
    public static final int OPCODE_ICONST_0        = 0x3;
    public static final int OPCODE_ICONST_1        = 0x4;
    public static final int OPCODE_ICONST_2        = 0x5;
    public static final int OPCODE_ICONST_3        = 0x6;
    public static final int OPCODE_ICONST_4        = 0x7;
    public static final int OPCODE_ICONST_5        = 0x8;
    public static final int OPCODE_LCONST_0        = 0x9;
    public static final int OPCODE_LCONST_1        = 0xa;
    public static final int OPCODE_FCONST_0        = 0xb;
    public static final int OPCODE_FCONST_1        = 0xc;
    public static final int OPCODE_FCONST_2        = 0xd;
    public static final int OPCODE_DCONST_0        = 0xe;
    public static final int OPCODE_DCONST_1        = 0xf;
    public static final int OPCODE_BIPUSH          = 0x10;
    public static final int OPCODE_SIPUSH          = 0x11;
    public static final int OPCODE_LDC             = 0x12;
    public static final int OPCODE_LDC_W           = 0x13;
    public static final int OPCODE_LDC2_W          = 0x14;
    public static final int OPCODE_ILOAD           = 0x15;
    public static final int OPCODE_LLOAD           = 0x16;
    public static final int OPCODE_FLOAD           = 0x17;
    public static final int OPCODE_DLOAD           = 0x18;
    public static final int OPCODE_ALOAD           = 0x19;
    public static final int OPCODE_ILOAD_0         = 0x1a;
    public static final int OPCODE_ILOAD_1         = 0x1b;
    public static final int OPCODE_ILOAD_2         = 0x1c;
    public static final int OPCODE_ILOAD_3         = 0x1d;
    public static final int OPCODE_LLOAD_0         = 0x1e;
    public static final int OPCODE_LLOAD_1         = 0x1f;
    public static final int OPCODE_LLOAD_2         = 0x20;
    public static final int OPCODE_LLOAD_3         = 0x21;
    public static final int OPCODE_FLOAD_0         = 0x22;
    public static final int OPCODE_FLOAD_1         = 0x23;
    public static final int OPCODE_FLOAD_2         = 0x24;
    public static final int OPCODE_FLOAD_3         = 0x25;
    public static final int OPCODE_DLOAD_0         = 0x26;
    public static final int OPCODE_DLOAD_1         = 0x27;
    public static final int OPCODE_DLOAD_2         = 0x28;
    public static final int OPCODE_DLOAD_3         = 0x29;
    public static final int OPCODE_ALOAD_0         = 0x2a;
    public static final int OPCODE_ALOAD_1         = 0x2b;
    public static final int OPCODE_ALOAD_2         = 0x2c;
    public static final int OPCODE_ALOAD_3         = 0x2d;
    public static final int OPCODE_IALOAD          = 0x2e;
    public static final int OPCODE_LALOAD          = 0x2f;
    public static final int OPCODE_FALOAD          = 0x30;
    public static final int OPCODE_DALOAD          = 0x31;
    public static final int OPCODE_AALOAD          = 0x32;
    public static final int OPCODE_BALOAD          = 0x33;
    public static final int OPCODE_CALOAD          = 0x34;
    public static final int OPCODE_SALOAD          = 0x35;
    public static final int OPCODE_ISTORE          = 0x36;
    public static final int OPCODE_LSTORE          = 0x37;
    public static final int OPCODE_FSTORE          = 0x38;
    public static final int OPCODE_DSTORE          = 0x39;
    public static final int OPCODE_ASTORE          = 0x3a;
    public static final int OPCODE_ISTORE_0        = 0x3b;
    public static final int OPCODE_ISTORE_1        = 0x3c;
    public static final int OPCODE_ISTORE_2        = 0x3d;
    public static final int OPCODE_ISTORE_3        = 0x3e;
    public static final int OPCODE_LSTORE_0        = 0x3f;
    public static final int OPCODE_LSTORE_1        = 0x40;
    public static final int OPCODE_LSTORE_2        = 0x41;
    public static final int OPCODE_LSTORE_3        = 0x42;
    public static final int OPCODE_FSTORE_0        = 0x43;
    public static final int OPCODE_FSTORE_1        = 0x44;
    public static final int OPCODE_FSTORE_2        = 0x45;
    public static final int OPCODE_FSTORE_3        = 0x46;
    public static final int OPCODE_DSTORE_0        = 0x47;
    public static final int OPCODE_DSTORE_1        = 0x48;
    public static final int OPCODE_DSTORE_2        = 0x49;
    public static final int OPCODE_DSTORE_3        = 0x4a;
    public static final int OPCODE_ASTORE_0        = 0x4b;
    public static final int OPCODE_ASTORE_1        = 0x4c;
    public static final int OPCODE_ASTORE_2        = 0x4d;
    public static final int OPCODE_ASTORE_3        = 0x4e;
    public static final int OPCODE_IASTORE         = 0x4f;
    public static final int OPCODE_LASTORE         = 0x50;
    public static final int OPCODE_FASTORE         = 0x51;
    public static final int OPCODE_DASTORE         = 0x52;
    public static final int OPCODE_AASTORE         = 0x53;
    public static final int OPCODE_BASTORE         = 0x54;
    public static final int OPCODE_CASTORE         = 0x55;
    public static final int OPCODE_SASTORE         = 0x56;
    public static final int OPCODE_POP             = 0x57;
    public static final int OPCODE_POP2            = 0x58;
    public static final int OPCODE_DUP             = 0x59;
    public static final int OPCODE_DUP_X1          = 0x5a;
    public static final int OPCODE_DUP_X2          = 0x5b;
    public static final int OPCODE_DUP2            = 0x5c;
    public static final int OPCODE_DUP2_X1         = 0x5d;
    public static final int OPCODE_DUP2_X2         = 0x5e;
    public static final int OPCODE_SWAP            = 0x5f;
    public static final int OPCODE_IADD            = 0x60;
    public static final int OPCODE_LADD            = 0x61;
    public static final int OPCODE_FADD            = 0x62;
    public static final int OPCODE_DADD            = 0x63;
    public static final int OPCODE_ISUB            = 0x64;
    public static final int OPCODE_LSUB            = 0x65;
    public static final int OPCODE_FSUB            = 0x66;
    public static final int OPCODE_DSUB            = 0x67;
    public static final int OPCODE_IMUL            = 0x68;
    public static final int OPCODE_LMUL            = 0x69;
    public static final int OPCODE_FMUL            = 0x6a;
    public static final int OPCODE_DMUL            = 0x6b;
    public static final int OPCODE_IDIV            = 0x6c;
    public static final int OPCODE_LDIV            = 0x6d;
    public static final int OPCODE_FDIV            = 0x6e;
    public static final int OPCODE_DDIV            = 0x6f;
    public static final int OPCODE_IREM            = 0x70;
    public static final int OPCODE_LREM            = 0x71;
    public static final int OPCODE_FREM            = 0x72;
    public static final int OPCODE_DREM            = 0x73;
    public static final int OPCODE_INEG            = 0x74;
    public static final int OPCODE_LNEG            = 0x75;
    public static final int OPCODE_FNEG            = 0x76;
    public static final int OPCODE_DNEG            = 0x77;
    public static final int OPCODE_ISHL            = 0x78;
    public static final int OPCODE_LSHL            = 0x79;
    public static final int OPCODE_ISHR            = 0x7a;
    public static final int OPCODE_LSHR            = 0x7b;
    public static final int OPCODE_IUSHR           = 0x7c;
    public static final int OPCODE_LUSHR           = 0x7d;
    public static final int OPCODE_IAND            = 0x7e;
    public static final int OPCODE_LAND            = 0x7f;
    public static final int OPCODE_IOR             = 0x80;
    public static final int OPCODE_LOR             = 0x81;
    public static final int OPCODE_IXOR            = 0x82;
    public static final int OPCODE_LXOR            = 0x83;
    public static final int OPCODE_IINC            = 0x84;
    public static final int OPCODE_I2L             = 0x85;
    public static final int OPCODE_I2F             = 0x86;
    public static final int OPCODE_I2D             = 0x87;
    public static final int OPCODE_L2I             = 0x88;
    public static final int OPCODE_L2F             = 0x89;
    public static final int OPCODE_L2D             = 0x8a;
    public static final int OPCODE_F2I             = 0x8b;
    public static final int OPCODE_F2L             = 0x8c;
    public static final int OPCODE_F2D             = 0x8d;
    public static final int OPCODE_D2I             = 0x8e;
    public static final int OPCODE_D2L             = 0x8f;
    public static final int OPCODE_D2F             = 0x90;
    public static final int OPCODE_I2B             = 0x91;
    public static final int OPCODE_I2C             = 0x92;
    public static final int OPCODE_I2S             = 0x93;
    public static final int OPCODE_LCMP            = 0x94;
    public static final int OPCODE_FCMPL           = 0x95;
    public static final int OPCODE_FCMPG           = 0x96;
    public static final int OPCODE_DCMPL           = 0x97;
    public static final int OPCODE_DCMPG           = 0x98;
    public static final int OPCODE_IFEQ            = 0x99;
    public static final int OPCODE_IFNE            = 0x9a;
    public static final int OPCODE_IFLT            = 0x9b;
    public static final int OPCODE_IFGE            = 0x9c;
    public static final int OPCODE_IFGT            = 0x9d;
    public static final int OPCODE_IFLE            = 0x9e;
    public static final int OPCODE_IF_ICMPEQ       = 0x9f;
    public static final int OPCODE_IF_ICMPNE       = 0xa0;
    public static final int OPCODE_IF_ICMPLT       = 0xa1;
    public static final int OPCODE_IF_ICMPGE       = 0xa2;
    public static final int OPCODE_IF_ICMPGT       = 0xa3;
    public static final int OPCODE_IF_ICMPLE       = 0xa4;
    public static final int OPCODE_IF_ACMPEQ       = 0xa5;
    public static final int OPCODE_IF_ACMPNE       = 0xa6;
    public static final int OPCODE_GOTO            = 0xa7;
    public static final int OPCODE_JSR             = 0xa8;
    public static final int OPCODE_RET             = 0xa9;
    public static final int OPCODE_TABLESWITCH     = 0xaa;
    public static final int OPCODE_LOOKUPSWITCH    = 0xab;
    public static final int OPCODE_IRETURN         = 0xac;
    public static final int OPCODE_LRETURN         = 0xad;
    public static final int OPCODE_FRETURN         = 0xae;
    public static final int OPCODE_DRETURN         = 0xaf;
    public static final int OPCODE_ARETURN         = 0xb0;
    public static final int OPCODE_RETURN          = 0xb1;
    public static final int OPCODE_GETSTATIC       = 0xb2;
    public static final int OPCODE_PUTSTATIC       = 0xb3;
    public static final int OPCODE_GETFIELD        = 0xb4;
    public static final int OPCODE_PUTFIELD        = 0xb5;
    public static final int OPCODE_INVOKEVIRTUAL   = 0xb6;
    public static final int OPCODE_INVOKESPECIAL   = 0xb7;
    public static final int OPCODE_INVOKESTATIC    = 0xb8;
    public static final int OPCODE_INVOKEINTERFACE = 0xb9;
    public static final int OPCODE_INVOKEDYNAMIC   = 0xba;
    public static final int OPCODE_NEW             = 0xbb;
    public static final int OPCODE_NEWARRAY        = 0xbc;
    public static final int OPCODE_ANEWARRAY       = 0xbd;
    public static final int OPCODE_ARRAYLENGTH     = 0xbe;
    public static final int OPCODE_ATHROW          = 0xbf;
    public static final int OPCODE_CHECKCAST       = 0xc0;
    public static final int OPCODE_INSTANCEOF      = 0xc1;
    public static final int OPCODE_MONITORENTER    = 0xc2;
    public static final int OPCODE_MONITOREXIT     = 0xc3;
    public static final int OPCODE_WIDE            = 0xc4;
    public static final int OPCODE_MULTIANEWARRAY  = 0xc5;
    public static final int OPCODE_IFNULL          = 0xc6;
    public static final int OPCODE_IFNONNULL       = 0xc7;
    public static final int OPCODE_GOTO_W          = 0xc8;
    public static final int OPCODE_JSR_W           = 0xc9;
    // might be implemented if needed
    //public static final int OPCODE_BREAKPOINT      = 0xca;
    //public static final int OPCODE_IMPDEP1         = 0xfe;
    //public static final int OPCODE_IMPDEP2         = 0xff;

    public InstructionReader() {
        readers.put(OPCODE_NOP, new nopReader());
        readers.put(OPCODE_ACONST_NULL, new aconst_nullReader());
        readers.put(OPCODE_ICONST_M1, new iconst_m1Reader());
        readers.put(OPCODE_ICONST_0, new iconst_0Reader());
        readers.put(OPCODE_ICONST_1, new iconst_1Reader());
        readers.put(OPCODE_ICONST_2, new iconst_2Reader());
        readers.put(OPCODE_ICONST_3, new iconst_3Reader());
        readers.put(OPCODE_ICONST_4, new iconst_4Reader());
        readers.put(OPCODE_ICONST_5, new iconst_5Reader());
        readers.put(OPCODE_LCONST_0, new lconst_0Reader());
        readers.put(OPCODE_LCONST_1, new lconst_1Reader());
        readers.put(OPCODE_FCONST_0, new fconst_0Reader());
        readers.put(OPCODE_FCONST_1, new fconst_1Reader());
        readers.put(OPCODE_FCONST_2, new fconst_2Reader());
        readers.put(OPCODE_DCONST_0, new dconst_0Reader());
        readers.put(OPCODE_DCONST_1, new dconst_1Reader());
        readers.put(OPCODE_BIPUSH, new bipushReader());
        readers.put(OPCODE_SIPUSH, new sipushReader());
        readers.put(OPCODE_LDC, new ldcReader());
        readers.put(OPCODE_LDC_W, new ldc_wReader());
        readers.put(OPCODE_LDC2_W, new ldc2_wReader());
        readers.put(OPCODE_ILOAD, new iloadReader());
        readers.put(OPCODE_LLOAD, new lloadReader());
        readers.put(OPCODE_FLOAD, new floadReader());
        readers.put(OPCODE_DLOAD, new dloadReader());
        readers.put(OPCODE_ALOAD, new aloadReader());
        readers.put(OPCODE_ILOAD_0, new iload_0Reader());
        readers.put(OPCODE_ILOAD_1, new iload_1Reader());
        readers.put(OPCODE_ILOAD_2, new iload_2Reader());
        readers.put(OPCODE_ILOAD_3, new iload_3Reader());
        readers.put(OPCODE_LLOAD_0, new lload_0Reader());
        readers.put(OPCODE_LLOAD_1, new lload_1Reader());
        readers.put(OPCODE_LLOAD_2, new lload_2Reader());
        readers.put(OPCODE_LLOAD_3, new lload_3Reader());
        readers.put(OPCODE_FLOAD_0, new fload_0Reader());
        readers.put(OPCODE_FLOAD_1, new fload_1Reader());
        readers.put(OPCODE_FLOAD_2, new fload_2Reader());
        readers.put(OPCODE_FLOAD_3, new fload_3Reader());
        readers.put(OPCODE_DLOAD_0, new dload_0Reader());
        readers.put(OPCODE_DLOAD_1, new dload_1Reader());
        readers.put(OPCODE_DLOAD_2, new dload_2Reader());
        readers.put(OPCODE_DLOAD_3, new dload_3Reader());
        readers.put(OPCODE_ALOAD_0, new aload_0Reader());
        readers.put(OPCODE_ALOAD_1, new aload_1Reader());
        readers.put(OPCODE_ALOAD_2, new aload_2Reader());
        readers.put(OPCODE_ALOAD_3, new aload_3Reader());
        readers.put(OPCODE_IALOAD, new ialoadReader());
        readers.put(OPCODE_LALOAD, new laloadReader());
        readers.put(OPCODE_FALOAD, new faloadReader());
        readers.put(OPCODE_DALOAD, new daloadReader());
        readers.put(OPCODE_AALOAD, new aaloadReader());
        readers.put(OPCODE_BALOAD, new baloadReader());
        readers.put(OPCODE_CALOAD, new caloadReader());
        readers.put(OPCODE_SALOAD, new saloadReader());
        readers.put(OPCODE_ISTORE, new istoreReader());
        readers.put(OPCODE_LSTORE, new lstoreReader());
        readers.put(OPCODE_FSTORE, new fstoreReader());
        readers.put(OPCODE_DSTORE, new dstoreReader());
        readers.put(OPCODE_ASTORE, new astoreReader());
        readers.put(OPCODE_ISTORE_0, new istore_0Reader());
        readers.put(OPCODE_ISTORE_1, new istore_1Reader());
        readers.put(OPCODE_ISTORE_2, new istore_2Reader());
        readers.put(OPCODE_ISTORE_3, new istore_3Reader());
        readers.put(OPCODE_LSTORE_0, new lstore_0Reader());
        readers.put(OPCODE_LSTORE_1, new lstore_1Reader());
        readers.put(OPCODE_LSTORE_2, new lstore_2Reader());
        readers.put(OPCODE_LSTORE_3, new lstore_3Reader());
        readers.put(OPCODE_FSTORE_0, new fstore_0Reader());
        readers.put(OPCODE_FSTORE_1, new fstore_1Reader());
        readers.put(OPCODE_FSTORE_2, new fstore_2Reader());
        readers.put(OPCODE_FSTORE_3, new fstore_3Reader());
        readers.put(OPCODE_DSTORE_0, new dstore_0Reader());
        readers.put(OPCODE_DSTORE_1, new dstore_1Reader());
        readers.put(OPCODE_DSTORE_2, new dstore_2Reader());
        readers.put(OPCODE_DSTORE_3, new dstore_3Reader());
        readers.put(OPCODE_ASTORE_0, new astore_0Reader());
        readers.put(OPCODE_ASTORE_1, new astore_1Reader());
        readers.put(OPCODE_ASTORE_2, new astore_2Reader());
        readers.put(OPCODE_ASTORE_3, new astore_3Reader());
        readers.put(OPCODE_IASTORE, new iastoreReader());
        readers.put(OPCODE_LASTORE, new lastoreReader());
        readers.put(OPCODE_FASTORE, new fastoreReader());
        readers.put(OPCODE_DASTORE, new dastoreReader());
        readers.put(OPCODE_AASTORE, new aastoreReader());
        readers.put(OPCODE_BASTORE, new bastoreReader());
        readers.put(OPCODE_CASTORE, new castoreReader());
        readers.put(OPCODE_SASTORE, new sastoreReader());
        readers.put(OPCODE_POP, new popReader());
        readers.put(OPCODE_POP2, new pop2Reader());
        readers.put(OPCODE_DUP, new dupReader());
        readers.put(OPCODE_DUP_X1, new dup_x1Reader());
        readers.put(OPCODE_DUP_X2, new dup_x2Reader());
        readers.put(OPCODE_DUP2, new dup2Reader());
        readers.put(OPCODE_DUP2_X1, new dup2_x1Reader());
        readers.put(OPCODE_DUP2_X2, new dup2_x2Reader());
        readers.put(OPCODE_SWAP, new swapReader());
        readers.put(OPCODE_IADD, new iaddReader());
        readers.put(OPCODE_LADD, new laddReader());
        readers.put(OPCODE_FADD, new faddReader());
        readers.put(OPCODE_DADD, new daddReader());
        readers.put(OPCODE_ISUB, new isubReader());
        readers.put(OPCODE_LSUB, new lsubReader());
        readers.put(OPCODE_FSUB, new fsubReader());
        readers.put(OPCODE_DSUB, new dsubReader());
        readers.put(OPCODE_IMUL, new imulReader());
        readers.put(OPCODE_LMUL, new lmulReader());
        readers.put(OPCODE_FMUL, new fmulReader());
        readers.put(OPCODE_DMUL, new dmulReader());
        readers.put(OPCODE_IDIV, new idivReader());
        readers.put(OPCODE_LDIV, new ldivReader());
        readers.put(OPCODE_FDIV, new fdivReader());
        readers.put(OPCODE_DDIV, new ddivReader());
        readers.put(OPCODE_IREM, new iremReader());
        readers.put(OPCODE_LREM, new lremReader());
        readers.put(OPCODE_FREM, new fremReader());
        readers.put(OPCODE_DREM, new dremReader());
        readers.put(OPCODE_INEG, new inegReader());
        readers.put(OPCODE_LNEG, new lnegReader());
        readers.put(OPCODE_FNEG, new fnegReader());
        readers.put(OPCODE_DNEG, new dnegReader());
        readers.put(OPCODE_ISHL, new ishlReader());
        readers.put(OPCODE_LSHL, new lshlReader());
        readers.put(OPCODE_ISHR, new ishrReader());
        readers.put(OPCODE_LSHR, new lshrReader());
        readers.put(OPCODE_IUSHR, new iushrReader());
        readers.put(OPCODE_LUSHR, new lushrReader());
        readers.put(OPCODE_IAND, new iandReader());
        readers.put(OPCODE_LAND, new landReader());
        readers.put(OPCODE_IOR, new iorReader());
        readers.put(OPCODE_LOR, new lorReader());
        readers.put(OPCODE_IXOR, new ixorReader());
        readers.put(OPCODE_LXOR, new lxorReader());
        readers.put(OPCODE_IINC, new iincReader());
        readers.put(OPCODE_I2L, new i2lReader());
        readers.put(OPCODE_I2F, new i2fReader());
        readers.put(OPCODE_I2D, new i2dReader());
        readers.put(OPCODE_L2I, new l2iReader());
        readers.put(OPCODE_L2F, new l2fReader());
        readers.put(OPCODE_L2D, new l2dReader());
        readers.put(OPCODE_F2I, new f2iReader());
        readers.put(OPCODE_F2L, new f2lReader());
        readers.put(OPCODE_F2D, new f2dReader());
        readers.put(OPCODE_D2I, new d2iReader());
        readers.put(OPCODE_D2L, new d2lReader());
        readers.put(OPCODE_D2F, new d2fReader());
        readers.put(OPCODE_I2B, new i2bReader());
        readers.put(OPCODE_I2C, new i2cReader());
        readers.put(OPCODE_I2S, new i2sReader());
        readers.put(OPCODE_LCMP, new lcmpReader());
        readers.put(OPCODE_FCMPL, new fcmplReader());
        readers.put(OPCODE_FCMPG, new fcmpgReader());
        readers.put(OPCODE_DCMPL, new dcmplReader());
        readers.put(OPCODE_DCMPG, new dcmpgReader());
        readers.put(OPCODE_IFEQ, new ifeqReader());
        readers.put(OPCODE_IFNE, new ifneReader());
        readers.put(OPCODE_IFLT, new ifltReader());
        readers.put(OPCODE_IFGE, new ifgeReader());
        readers.put(OPCODE_IFGT, new ifgtReader());
        readers.put(OPCODE_IFLE, new ifleReader());
        readers.put(OPCODE_IF_ICMPEQ, new if_icmpeqReader());
        readers.put(OPCODE_IF_ICMPNE, new if_icmpneReader());
        readers.put(OPCODE_IF_ICMPLT, new if_icmpltReader());
        readers.put(OPCODE_IF_ICMPGE, new if_icmpgeReader());
        readers.put(OPCODE_IF_ICMPGT, new if_icmpgtReader());
        readers.put(OPCODE_IF_ICMPLE, new if_icmpleReader());
        readers.put(OPCODE_IF_ACMPEQ, new if_acmpeqReader());
        readers.put(OPCODE_IF_ACMPNE, new if_acmpneReader());
        readers.put(OPCODE_GOTO, new gotoReader());
        readers.put(OPCODE_JSR, new jsrReader());
        readers.put(OPCODE_RET, new retReader());
        readers.put(OPCODE_TABLESWITCH, new tableswitchReader());
        readers.put(OPCODE_LOOKUPSWITCH, new lookupswitchReader());
        readers.put(OPCODE_IRETURN, new ireturnReader());
        readers.put(OPCODE_LRETURN, new lreturnReader());
        readers.put(OPCODE_FRETURN, new freturnReader());
        readers.put(OPCODE_DRETURN, new dreturnReader());
        readers.put(OPCODE_ARETURN, new areturnReader());
        readers.put(OPCODE_RETURN, new returnReader());
        readers.put(OPCODE_GETSTATIC, new getstaticReader());
        readers.put(OPCODE_PUTSTATIC, new putstaticReader());
        readers.put(OPCODE_GETFIELD, new getfieldReader());
        readers.put(OPCODE_PUTFIELD, new putfieldReader());
        readers.put(OPCODE_INVOKEVIRTUAL, new invokevirtualReader());
        readers.put(OPCODE_INVOKESPECIAL, new invokespecialReader());
        readers.put(OPCODE_INVOKESTATIC, new invokestaticReader());
        readers.put(OPCODE_INVOKEINTERFACE, new invokeinterfaceReader());
        readers.put(OPCODE_INVOKEDYNAMIC, new invokedynamicReader());
        readers.put(OPCODE_NEW, new newReader());
        readers.put(OPCODE_NEWARRAY, new newarrayReader());
        readers.put(OPCODE_ANEWARRAY, new anewarrayReader());
        readers.put(OPCODE_ARRAYLENGTH, new arraylengthReader());
        readers.put(OPCODE_ATHROW, new athrowReader());
        readers.put(OPCODE_CHECKCAST, new checkcastReader());
        readers.put(OPCODE_INSTANCEOF, new instanceofReader());
        readers.put(OPCODE_MONITORENTER, new monitorenterReader());
        readers.put(OPCODE_MONITOREXIT, new monitorexitReader());
        readers.put(OPCODE_WIDE, new wideReader(this));
        readers.put(OPCODE_MULTIANEWARRAY, new multianewarrayReader());
        readers.put(OPCODE_IFNULL, new ifnullReader());
        readers.put(OPCODE_IFNONNULL, new ifnonnullReader());
        readers.put(OPCODE_GOTO_W, new goto_wReader());
        readers.put(OPCODE_JSR_W, new jsr_wReader());
        //readers.put(OPCODE_BREAKPOINT, new breakpointReader());
        //readers.put(OPCODE_IMPDEP1, new impdep1Reader());
        //readers.put(OPCODE_IMPDEP2, new impdep2Reader());
    }

    @Override
    public Instruction read(final IndexedDataInputStream input) throws IOException {
        final int next = input.readUnsignedByte();
        final Reader<? extends Instruction> reader = readers.get(next);
        // if there is no reader associated to this opcode we have an unknown op
        if (reader == null) {
            return new UnknownInstruction();
        }
        return reader.read(input);
    }

    public void add(final int opcode, final Reader<Instruction> reader) {
        if (reader == null) {
            throw new NullPointerException("reader cannot be null.");
        }
        readers.put(opcode, reader);
    }

    public boolean remove(final int opcode) {
        return readers.remove(opcode) != null;
    }

    public boolean remove(final Reader<Instruction> reader) {
        boolean removed = false;
        for (final Map.Entry<Integer, Reader<? extends Instruction>> entry : readers.entrySet()) {
            if (entry.getValue() == reader || entry.getValue().equals(reader)) {
                readers.remove(entry.getKey());
                removed = true;
            }
        }
        return removed;
    }
}
